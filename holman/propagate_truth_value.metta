! (register-module! ../../metta-moses-reduction)
! (import! &self metta-moses-reduction:utilities:helper-functions)
;;! (import! &self metta-moses-reduction:reduction:utils)
! (import! &self metta-moses-reduction:utilities:tree-ds)
! (import! &self metta-moses-reduction:utilities:helper-functions)

(:propagate-truth-value (-> Expression Bool Expression))
(= (propagate-truth-value $exp $truth-value)
    (case $exp(
            (($op $exp1 $exp2)
                (if (== $truth-value False)
                    (if (== $op AND)
                        (OR (propagate-truth-value $exp1 (not $truth-value)) (propagate-truth-value $exp2 (not $truth-value)))
                        (AND (propagate-truth-value $exp1 (not $truth-value)) (propagate-truth-value $exp2 (not $truth-value)))
                    )
                    ($op (propagate-truth-value $exp1 $truth-value) (propagate-truth-value $exp2 $truth-value))
                )

            )
            ((NOT $exp1)
                (if (== $truth-value False)
                    (Cons $exp1 (Cons True Nil))
                    (Cons $exp1 (Cons False Nil))
                )
            )
            ($_ (Cons $exp (Cons $truth-value Nil)))

        )
    )
)
;;!(propagate-truth-value (AND (OR x1 x2) (AND x3 x4)) False)
;;!(buildTree (AND (AND (OR A (NOT B)) (OR A C)) B))
!(apply-or-cut (Cons A True (OR (Cons B True (OR (Cons D False)))(Cons C False))) (OR (Cons D False)))

